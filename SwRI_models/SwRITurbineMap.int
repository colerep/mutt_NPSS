/*******************************************************************************
© Copyright 2003. The U.S. Government, as Represented by the Administrator of
the National Aeronautics and Space Administration (NASA). All rights reserved.
Includes content licensed from the U.S. Government, National Aeronautics and
Space Administration under United States Copyright Registration Numbers
V3503D364 and V3482D344.
© 2008-2013 NPSS® Consortium, www.NPSSConsortium.org/AllRightsReserved
*******************************************************************************/

/*******************************************************************************
NPSS® software and related documentation is export controlled with an Export
Control Classification Number(ECCN) of 9D991, controlled for Anti-Terrorism
reasons, under U.S. Export Administration Regulations 15 CFR 730-774. It may
not be transferred to a country checked under anti-terrorism on the Commerce
Country Chart structure or to foreign nationals of those countries in the U.S.
or abroad without first obtaining a license from the Bureau of Industry and
Security, United States Department of Commerce. Violations are punishable by
fine, imprisonment, or both.
*******************************************************************************/
//
// Last modified on 2016-04-12 by Jeffrey Bennett
//

#ifndef __SWRITURBINEMAP__
#define __SWRITURBINEMAP__

#include <InterpIncludes.ncp>

// Variables that exist in the parent Compressor element
// and are used in this subelement.
extern real alpha;
extern real Qdotin;

// Variables that exist in the parent Compressor element
// and are set by this subelement.
extern real isenEff;
extern real actualHead;


class SwRITurbineMap extends Subelement {

//------------------------------------------------------------
//     ******* DOCUMENTATION *******
//------------------------------------------------------------

//------------------------------------------------------------
//     ******* SETUP VARIABLES ********
//------------------------------------------------------------

//------------------------------------------------------------
//   ******* OPTION VARIABLE SETUP *******
//------------------------------------------------------------
  
//------------------------------------------------------------
// ****** SETUP PORTS, FLOW STATIONS, SOCKETS, TABLES ********
//------------------------------------------------------------

// FLUID PORTS

// FUEL PORTS

// BLEED PORTS

// THERMAL PORTS

// MECHANICAL PORTS

// FLOW STATIONS

// SOCKETS
  addInterface( "TURBINE_MAP" ); // compatible with the Turbine element's S_map socketType
  
   Socket TB_isenEff {  
   description = "Efficiency versus alpha, speed and Rline.  A function or table with the name TB_eff must be declared at the subelement scope in order to fill this socket.  The format is TB_eff (real alpha, real Nc, real Rline).";
   socketType = "Function";
   required = FALSE;
   argTypes = { "real", "real"}
   returnType = "real";
 }

 Socket TB_isenHead {  
   description = "Total-to-total pressure ratio versus alpha, speed and Rline.  A function or table with the name TB_PR must be declared at the subelement scope in order to fill this socket.  The format is TB_PR (real alpha, real Nc, real Rline).";
   socketType = "Function";
   required = FALSE;
   argTypes = { "real", "real"}
   returnType = "real";
 }

// TABLES


//------------------------------------------------------------
// ******* INTERNAL SOLVER SETUP *******
//------------------------------------------------------------

//------------------------------------------------------------
//  ******  ADD SOLVER INDEPENDENTS & DEPENDENTS  ******
//------------------------------------------------------------
  
//------------------------------------------------------------
// ******* VARIABLE CHANGED METHODOLOGY *******
//------------------------------------------------------------

//------------------------------------------------------------
//   ******* PERFORM ENGINEERING CALCULATIONS *******
//------------------------------------------------------------
  
  void calculate() {

	//-------------------------------------------------------------------
	// execute the efficiency map (function socket)
	//-------------------------------------------------------------------
	isenEff = TB_isenEff(alpha, Qdotin);

	//-------------------------------------------------------------------
	// execute the pressure map (function socket)
	//-------------------------------------------------------------------	
	isenHead = TB_isenHead(alpha, Qdotin);

  } // end calculate() function
  
} // end SwRITurbineMap subelement class
 
#endif